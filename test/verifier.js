const Verifier = artifacts.require('Verifier.sol')

contract('Verifier', async () => {
  let instance

  before(async () => {
    instance = await Verifier.deployed()
  })

  it('should verify a proof', async () => {
    let rootHash = '0xda2e968e25198a0a41e4dcdc6fcb03b9d49274b3d44cb35d921e4ebe3fb5c54c'

    let path = '0x61'
    let value = '0x857465737431'
    let nodes = '0xf83bf839808080808080c8318685746573743180a0207947cf85c03bd3d9f9ff5119267616318dcef0e12de2f8ca02ff2cdc720a978080808080808080'

    let ok = await instance.verifyProof.call(value, nodes, path, rootHash)
    assert.isTrue(ok, 'verification failed')
  })

  it('should verify actual receipt data', async () => {
    let rootHash = '0xa4ae699afee1fdf34e04bb1d1343f545eb307507d51bab278455a2fdd59d9291'

    let path = '0x05'
    let value = '0xf90164018326ffacbf85af85894fc8e2b378a37ea51b90049df56fad5f44cd35dafe1a0248dd4076d0a389d795107efafd558ce7f31ae37b441ccb9a599c60868f480d5a00000000000000000000000000000000000000000000000000000000000000003'
    let nodes = '0xf902f5f851a0255ecc037ff6811f9b0baa6c5758918418f00ed387046f64de740eee331b49f180808080808080a030a6010cdd0fa8d28273e1f23df5e6d2ef6e8ddf70358bf290254b7bf8abcb078080808080808080f9013180a02b116ec481e7112485436513c89b26b859f72ef8ca7868a579e4cdbca5bc9740a040ba87af7b11b0a719207dc7486a04288eef64930f723ed0ae7c5a6755803c39a05a19bbd0c0b07a3f9670f6a9b8fd81a961a75765c6979b64b14b0dd4f7f5094fa0f290f63439068283b129e7464a293b9649a391a28b50e480e80ecbb8e9a73507a06dea5f80bbcccc6abb799e614da28c6abaeaea435239b868cdee0b0adbedc276a0ccc807ffe815b6dc0d9cdfa65c3134e651e5623bca3f973941b60e88d8f28084a0044bbd26f864ec2ab65c9b4753112d1d0bfc23e45975611deb2ea972c3d9d676a0fc6d4532e18442b7cbb09507f73c08e520b9947bc7ca188d1aa10e34d76ea49ba04fa16566afa4f4a08a06009a2d0994e8990a9339b2870131827aa86cc5ac055980808080808080f9016b20b90167f90164018326ffacbf85af85894fc8e2b378a37ea51b90049df56fad5f44cd35dafe1a0248dd4076d0a389d795107efafd558ce7f31ae37b441ccb9a599c60868f480d5a00000000000000000000000000000000000000000000000000000000000000003'

    let ok = await instance.verifyProof.call(value, nodes, path, rootHash)
    assert.isTrue(ok, 'verification failed')
  })
})
